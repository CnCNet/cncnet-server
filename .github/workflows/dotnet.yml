name: Publish
on:
  workflow_dispatch:
permissions:
  contents: write
jobs:
  calculate-version:
    name: Calculate Version
    runs-on: windows-latest
    outputs:
      AssemblySemVer: ${{ steps.gitversion.outputs.AssemblySemVer }}
      AssemblySemFileVer: ${{ steps.gitversion.outputs.AssemblySemFileVer }}
      InformationalVersion: ${{ steps.gitversion.outputs.InformationalVersion }}
      SemVer: ${{ steps.gitversion.outputs.SemVer }}
      PreReleaseTag: ${{ steps.gitversion.outputs.PreReleaseTag }}
    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          fetch-depth: 0
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@main
        with:
          versionSpec: '5.x'
      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@main
  publish:
    runs-on: windows-latest
    needs: calculate-version
    env:
      AssemblySemVer: ${{ needs.calculate-version.outputs.AssemblySemVer }}
      AssemblySemFileVer: ${{ needs.calculate-version.outputs.AssemblySemFileVer }}
      InformationalVersion: ${{ needs.calculate-version.outputs.InformationalVersion }}
      SemVer: ${{ needs.calculate-version.outputs.SemVer }}
    strategy:
      matrix:
        os: [win10, linux, osx.13, ubuntu.22.04, fedora.38]
        platform: [x64, arm64]
        framework: [net8.0, net7.0]
        release: [Release, V2AndV3Release]
    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: Setup .NET Core 7 SDK
        if: matrix.framework == net7.0
        uses: actions/setup-dotnet@main
        with:
          dotnet-version: '7.x.x'
      - name: Setup .NET Core 8 SDK
        if: matrix.framework == net8.0
        uses: actions/setup-dotnet@main
        with:
          dotnet-version: '8.x.x'
          dotnet-quality: 'preview'
      - name: Publish
        run: dotnet publish -c matrix.release -f matrix.framework -r "${{ matrix.os }}-${{ matrix.platform }}" --no-self-contained -p:PublishSingleFile=true -p:DebugType=embedded -p:AssemblyVersion=$env:GitVersion_AssemblySemVer -p:FileVersion=$env:GitVersion_AssemblySemFileVer -p:InformationalVersion=$env:GitVersion_InformationalVersion
      - name: Zip
        run: 7z a -r "cncnet-server-v${{ env.SemVer }}-${{ matrix.framework }}-${{ matrix.release }}-${{ matrix.runtime }}.zip" "./bin/${{ matrix.release }}/${{ matrix.framework }}/${{ matrix.runtime }}/publish/*.*"
      - name: Upload Artifacts
        uses: actions/upload-artifact@main
        with:
          name: ${{ matrix.os }}-${{ matrix.platform }}-${{ matrix.framework }}-${{ matrix.release }}
          path: cncnet-server-v${{ env.SemVer }}-${{ matrix.framework }}-${{ matrix.release }}-${{ matrix.runtime }}
          if-no-files-found: error
  release:
    needs: [calculate-version, publish]
    env:
      PreReleaseTag: ${{ needs.calculate-version.outputs.PreReleaseTag }}
      SemVer: ${{ needs.calculate-version.outputs.SemVer }}
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: Download Artifacts
        uses: actions/download-artifact@main
        with:
          path: ./artifacts
      - name: Prerelease
        if: env.PreReleaseTag != ''
        run: gh release create ${{ format('v{0}', env.SemVer) }} (get-item ./artifacts/*/*.zip) --generate-notes --target ${{ github.sha }} --prerelease
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Release
        if: env.PreReleaseTag == ''
        run: gh release create ${{ format('v{0}', env.SemVer) }} (get-item ./artifacts/*/*.zip) --generate-notes --target ${{ github.sha }}
        env:
          GH_TOKEN: ${{ github.token }}