name: .NET
on:
  workflow_dispatch:
permissions:
  contents: write
jobs:
  build:
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@main
      with:
        fetch-depth: 0
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@main
      with:
        dotnet-version: '7.x.x'
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@main
      with:
        versionSpec: '5.x'
    - name: Determine Version
      uses: gittools/actions/gitversion/execute@main
    - name: Publish
      run: |
        dotnet publish -c Release -p:AssemblyVersion=$env:GitVersion_AssemblySemVer -p:FileVersion=$env:GitVersion_AssemblySemFileVer -p:InformationalVersion=$env:GitVersion_InformationalVersion
        dotnet publish -c Release -r win10-x64 --no-self-contained -p:PublishReadyToRun=true -p:PublishReadyToRunComposite=true -p:PublishSingleFile=true -p:DebugType=embedded -p:AssemblyVersion=$env:GitVersion_AssemblySemVer -p:FileVersion=$env:GitVersion_AssemblySemFileVer -p:InformationalVersion=$env:GitVersion_InformationalVersion
        dotnet publish -c Release -r win10-arm64 --no-self-contained -p:PublishReadyToRun=true -p:PublishReadyToRunComposite=true -p:PublishSingleFile=true -p:DebugType=embedded -p:AssemblyVersion=$env:GitVersion_AssemblySemVer -p:FileVersion=$env:GitVersion_AssemblySemFileVer -p:InformationalVersion=$env:GitVersion_InformationalVersion
        dotnet publish -c Release -r linux-x64 --no-self-contained -p:PublishReadyToRun=true -p:PublishReadyToRunComposite=true -p:PublishSingleFile=true -p:DebugType=embedded -p:AssemblyVersion=$env:GitVersion_AssemblySemVer -p:FileVersion=$env:GitVersion_AssemblySemFileVer -p:InformationalVersion=$env:GitVersion_InformationalVersion
        dotnet publish -c Release -r linux-arm64 --no-self-contained -p:PublishReadyToRun=true -p:PublishReadyToRunComposite=true -p:PublishSingleFile=true -p:DebugType=embedded -p:AssemblyVersion=$env:GitVersion_AssemblySemVer -p:FileVersion=$env:GitVersion_AssemblySemFileVer -p:InformationalVersion=$env:GitVersion_InformationalVersion
        dotnet publish -c Release -r osx.13-x64 --no-self-contained -p:PublishReadyToRun=true -p:PublishReadyToRunComposite=true -p:PublishSingleFile=true -p:DebugType=embedded -p:AssemblyVersion=$env:GitVersion_AssemblySemVer -p:FileVersion=$env:GitVersion_AssemblySemFileVer -p:InformationalVersion=$env:GitVersion_InformationalVersion
        dotnet publish -c Release -r osx.13-arm64 --no-self-contained -p:PublishReadyToRun=true -p:PublishReadyToRunComposite=true -p:PublishSingleFile=true -p:DebugType=embedded -p:AssemblyVersion=$env:GitVersion_AssemblySemVer -p:FileVersion=$env:GitVersion_AssemblySemFileVer -p:InformationalVersion=$env:GitVersion_InformationalVersion
        dotnet publish -c Release -r ubuntu.22.04-x64 --no-self-contained -p:PublishReadyToRun=true -p:PublishReadyToRunComposite=true -p:PublishSingleFile=true -p:DebugType=embedded -p:AssemblyVersion=$env:GitVersion_AssemblySemVer -p:FileVersion=$env:GitVersion_AssemblySemFileVer -p:InformationalVersion=$env:GitVersion_InformationalVersion
        dotnet publish -c Release -r ubuntu.22.04-arm64 --no-self-contained -p:PublishReadyToRun=true -p:PublishReadyToRunComposite=true -p:PublishSingleFile=true -p:DebugType=embedded -p:AssemblyVersion=$env:GitVersion_AssemblySemVer -p:FileVersion=$env:GitVersion_AssemblySemFileVer -p:InformationalVersion=$env:GitVersion_InformationalVersion
        dotnet publish -c Release -r fedora.38-x64 --no-self-contained -p:PublishReadyToRun=true -p:PublishReadyToRunComposite=true -p:PublishSingleFile=true -p:DebugType=embedded -p:AssemblyVersion=$env:GitVersion_AssemblySemVer -p:FileVersion=$env:GitVersion_AssemblySemFileVer -p:InformationalVersion=$env:GitVersion_InformationalVersion
        dotnet publish -c Release -r fedora.38-arm64 --no-self-contained -p:PublishReadyToRun=true -p:PublishReadyToRunComposite=true -p:PublishSingleFile=true -p:DebugType=embedded -p:AssemblyVersion=$env:GitVersion_AssemblySemVer -p:FileVersion=$env:GitVersion_AssemblySemFileVer -p:InformationalVersion=$env:GitVersion_InformationalVersion
    - name: Zip
      run: |
        7z a -r ${{ format('cncnet-server-v{0}-net7.0-any.zip', env.GitVersion_SemVer) }} ./bin/Release/net7.0/publish/*
        7z a -r ${{ format('cncnet-server-v{0}-net7.0-win10-x64.zip', env.GitVersion_SemVer) }} ./bin/Release/net7.0/win10-x64/publish/*
        7z a -r ${{ format('cncnet-server-v{0}-net7.0-win10-arm64.zip', env.GitVersion_SemVer) }} ./bin/Release/net7.0/win10-arm64/publish/*
        7z a -r ${{ format('cncnet-server-v{0}-net7.0-linux-x64.zip', env.GitVersion_SemVer) }} ./bin/Release/net7.0/linux-x64/publish/*
        7z a -r ${{ format('cncnet-server-v{0}-net7.0-linux-arm64.zip', env.GitVersion_SemVer) }} ./bin/Release/net7.0/linux-arm64/publish/*
        7z a -r ${{ format('cncnet-server-v{0}-net7.0-osx.13-x64.zip', env.GitVersion_SemVer) }} ./bin/Release/net7.0/osx.13-x64/publish/*
        7z a -r ${{ format('cncnet-server-v{0}-net7.0-osx.13-arm64.zip', env.GitVersion_SemVer) }} ./bin/Release/net7.0/osx.13-arm64/publish/*
        7z a -r ${{ format('cncnet-server-v{0}-net7.0-ubuntu.22.04-x64.zip', env.GitVersion_SemVer) }} ./bin/Release/net7.0/ubuntu.22.04-x64/publish/*
        7z a -r ${{ format('cncnet-server-v{0}-net7.0-ubuntu.22.04-arm64.zip', env.GitVersion_SemVer) }} ./bin/Release/net7.0/ubuntu.22.04-arm64/publish/*
        7z a -r ${{ format('cncnet-server-v{0}-net7.0-fedora.38-x64.zip', env.GitVersion_SemVer) }} ./bin/Release/net7.0/fedora.38-x64/publish/*
        7z a -r ${{ format('cncnet-server-v{0}-net7.0-fedora.38-arm64.zip', env.GitVersion_SemVer) }} ./bin/Release/net7.0/fedora.38-arm64/publish/*
    - name: Prerelease
      if: ${{ env.GitVersion_PreReleaseTag != '' }}
      run: gh release create ${{ format('v{0}', env.GitVersion_SemVer) }} (get-item *.zip) --generate-notes --target ${{ github.sha }} --prerelease
      env:
        GH_TOKEN: ${{ github.token }}
    - name: Release
      if: ${{ env.GitVersion_PreReleaseTag == '' }}
      run: gh release create ${{ format('v{0}', env.GitVersion_SemVer) }} (get-item *.zip) --generate-notes --target ${{ github.sha }}
      env:
        GH_TOKEN: ${{ github.token }}